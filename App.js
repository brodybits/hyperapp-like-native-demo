/**
 * Hyperapp micro rewrite demo on React Native
 *
 * based on code generated by react-native init
 *
 * https://github.com/facebook/react-native
 *
 * @flow
 */

import React from 'react'

import createReactClass from 'create-react-class'

import {
  Button,
  StyleSheet,
  Text,
  View
} from 'react-native'

const App = () => (
  <ManagedView
    state={{count: 0}}
    actions={{
      up: (state) => ({ count: state.count + 1 }),
      dn: (state) => ({ count: state.count - 1 }),
    }}
    effects = {{
      delayedUpAndDn: (actions, effects) => {
        setTimeout(effects.upAndDn, 500)
      },
      upAndDn: (actions, effects) => {
        actions.up()
        setTimeout(actions.dn, 500)
      }
    }}>
    <MyView />
  </ManagedView>
)

const MyView =
  ({state, actions, effects}) => {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>
          Hyperapp micro rewrite demo on React Native
        </Text>
        <Button
          onPress={actions.up}
          title="Up (+1)"
        />
        <Text style={styles.welcome}>
          {state.count}
        </Text>
        <Button
          onPress={actions.dn}
          title="Down (-1)"
        />
        <Text>
          ...
        </Text>
        <Button
          onPress={effects.delayedUpAndDn}
          title="Up and down with delay"
        />
      </View>
    )
  }

export default App

const ManagedView = createReactClass({
  getInitialState() {
    const ac = {}
    const ef = {}
    const self = this
    for (let a in this.props.actions) ac[a] = () => {
      self.setState(prev => ({ac: ac, st: (this.props.actions[a](prev.st))}))
    }
    for (let e in this.props.effects) ef[e] = () => {
      this.props.effects[e](ac, ef)
    }
    return {ac: ac, st: this.props.state, ef: ef}
  },
  render() {
    return React.Children.map(this.props.children, ch => (
      React.cloneElement(ch, {state: this.state.st, actions: this.state.ac, effects: this.state.ef})
    ))
  }
})

// from react-native init:
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
})
